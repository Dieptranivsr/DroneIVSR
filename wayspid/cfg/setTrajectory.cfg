#! /usr/bin/env python

PACKAGE='wayspid'

import roslib;
roslib.load_manifest(PACKAGE)

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

trajectory_enum = gen.enum([	gen.const("none", 			int_t, 	0, 	"No command"),
				gen.const("hover", 			int_t, 	1, 	"Hover in (0, 0, 1)"),
				gen.const("user", 			int_t, 	2, 	"Defined by user with (x_d, y_d, z_d)"),
				gen.const("waypoints", 			int_t, 	3, 	"Waypoints from file"),
				gen.const("agile_waypoints_org_away", 	int_t, 	4, 	"Agile waypoints from file"),
				gen.const("motor_failure_waypoints", 	int_t, 	6, 	"Motor failure waypoints from file"),
				gen.const("hover_pos", 			int_t, 	11, 	"Hover at current pos"),
				gen.const("circle", 			int_t, 	5, 	"Circular trajectory"),
				gen.const("vertical_circle", 		int_t, 	13, 	"Vertical Circle"),
				#gen.const("smooth_8", 			int_t, 	6, 	"Smooth 8-trajectory"),
				gen.const("aggressive_8", 		int_t, 	7, 	"Aggressive 8-trajectory"),
				gen.const("square", 			int_t, 	8, 	"Square trajectoty"),
				gen.const("square_waypoints", 		int_t, 	9, 	"Square-waypoints trajectoty"),
				gen.const("straight_line", 		int_t, 	10, 	"Straight line"),
				gen.const("variable_circle", 		int_t, 	12, 	"Circular trajectory with variable speed")
				], "Trajectory type")



#       	Name			Type      	Level	Description			Default 	Min	Max 	Values
gen.add(	"trajectory", 		int_t,		0,	"Trajectory type",		0,		0,	13,	edit_method=trajectory_enum)
gen.add(	"speed",   		double_t,	1,    	"Trajectory speed (m/s)", 	0.5,		0,	20)
gen.add(	"straight_speed",   	double_t,	1,    	"Trajectory speed (m/s)", 	1,		0,	20)
gen.add(	"x_d",   		double_t,	2,    	"Desired x position",		0,		-3,	3)
gen.add(	"y_d",   		double_t,    	2,    	"Desired y position",		0,		-3,	3)
gen.add(	"z_d", 			double_t,    	2,    	"Desired z position", 		1,		-1,	5)
gen.add(	"yaw_d", 		double_t,    	2,    	"Desired yaw orientation", 	0,		-179,	180)

exit(gen.generate(PACKAGE, "wayspid", "setTrajectory"))
